A arquitetura hexagonal é um padrão de arquitetura de software proposto por Alistair Cockburn nos anos 90. O objetivo da arquitetura hexagonal e o que ela se propõe a resolver são a construção de softwares coesos, com alto grau de reusabilidade, baixo acoplamento, independência de tecnologias e facilidade de serem testados. A principal diferença entre a arquitetura hexagonal e a arquitetura limpa é basicamente a nomeação das camadas de ambas as arquiteturas, seguindo o padrão "onion" na maioria dos casos. Na minha opinião, a arquitetura hexagonal é desnecessária para projetos pequenos que não demandam complexidade no código. Devemos considerar a complexidade do sistema antes de usarmos a arquitetura hexagonal, sendo interessante aplicarmos esta somente quando há um grande número de casos de uso e entidades de negócio. Vale ressaltar a congruência dos conceitos da arquitetura hexagonal com microsserviços, sendo a concepção destes um bom indicativo para usar uma arquitetura mais robusta.
